import Layout from "@/components/Layout";
import NoSSRWrapper from "@/components/NoSSRWrapper";
import { Button } from "@/ui/Button";
import Chip from "@/ui/Chip";
import Dropdown from "@/ui/Dropdown";
import { GradientContainer } from "@/ui/GradientContainer";
import { Input, TextArea } from "@/ui/Input";
import Photo from "@/ui/Photo";
import SelectBox from "@/ui/SelectBox";
import Spacer from "@/ui/Spacer";
import usePreventNavigation from "@/utils/hooks/usePreventNavigation";
import { useRouter } from "next/router";
import { useState } from "react";
import { type NextPageWithLayout } from "./_app";

const AddTarget: NextPageWithLayout = () => {
  const router = useRouter();
  const [unsavedChanges, setUnsavedChanges] = useState(true);

  usePreventNavigation(router, unsavedChanges, "You have unsaved changes");

  const handleSubmit: React.MouseEventHandler = (e) => {
    e.preventDefault();
    setUnsavedChanges(false);
    router.replace("/");
  };

  return (
    <NoSSRWrapper>
      <div className="flex flex-col items-center px-2">
        <div className="w-full max-w-screen-md"></div>
        <div className="flex w-full max-w-lg flex-col">
          <Spacer className="h-6" />
          <Photo className="w-1/2 self-center" />
          <Spacer className="h-6" />
          <Input
            id="real-name"
            autoComplete="off"
            placeholderLabel="–°–ø—Ä–∞–≤–∂–Ω—î —ñ–º º—è –ª—é–¥–∏–Ω–∏ (—è–∫—â–æ –≤—ñ–¥–æ–º–æ)"
          />
          <SectionHeader title="–ü—Å–µ–≤–¥–æ–Ω—ñ–º–∏ (–¥–æ 10)" />
          <InputGroup
            count={2}
            builder={(i) => (
              <Input
                id={`nickname-${i}`}
                autoComplete="off"
                placeholderLabel={`–ü—Å–µ–≤–¥–æ–Ω—ñ–º ${i + 1}`}
              />
            )}
          />
          <SectionHeader title="–°—Ç–∞–≤–ª–µ–Ω–Ω—è –¥–æ –≤—ñ–π–Ω–∏" />
          <ViewOnWar />
          <SectionHeader title="–°—Ñ–µ—Ä–∞ –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ" />
          <div className="flex flex-wrap gap-1.5">
            <Chip label="–ë–ª–æ–≥–µ—Ä" selected={false} />
            <Chip label="–°–ø—ñ–≤–∞–∫" selected={false} />
            <Chip label="–°–ø–æ—Ä—Ç—Å–º–µ–Ω" selected={true} />
            <Chip label="–ê–∫—Ç–æ—Ä" selected={false} />
            <Chip label="–Ü–Ω—à–µ" selected={true} />
          </div>
          <SectionHeader
            title="–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ä–µ—Å—É—Ä—Å–∏ –ª—é–¥–∏–Ω–∏ (–¥–æ 10)"
            subtitle="Telegram, Instagram, YouTube, TikTok..."
          />
          <InputGroup
            count={2}
            builder={(i) => (
              <Input
                id={`nickname-${i}`}
                autoComplete="off"
                placeholderLabel={`–ü–æ—Å–∏–ª–∞–Ω–Ω—è ${i + 1}`}
              />
            )}
          />
          <Spacer className="h-5" />
          <Dropdown
            placeholderLabel={"–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å (—è–∫—â–æ –≤—ñ–¥–æ–º–∞)"}
            selected={undefined}
            options={["–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", "–°–≤–∏–Ω—è—á–∞", "–Ü–Ω—à–∞"]}
          />
          <SectionHeader
            title={<div className="text-h3">–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–æ–∑–∏—Ü—ñ—ó –ª—é–¥–∏–Ω–∏</div>}
            subtitle={
              <div className="text-h8">
                –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ö–æ—á–∞ –±{" "}
                <span className="font-bold">–æ–¥–Ω–µ –∑ –ø–æ–ª—ñ–≤ –Ω–∏–∂—á–µ</span>.
              </div>
            }
          />
          <TextArea
            id="proof"
            placeholderLabel="–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –¥—ñ–π –ª—é–¥–∏–Ω–∏"
            autoComplete="off"
          />
          <SectionHeader
            title="–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¥–æ–∫–∞–∑–∏ (–¥–æ 10)"
            subtitle="–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ, –¥–æ–ø–∏—Å, —Å—Ç–∞—Ç—å—é —ñ —Ç–¥."
          />
          <InputGroup
            count={2}
            builder={(i) => (
              <Input
                id={`nickname-${i}`}
                autoComplete="off"
                placeholderLabel={`–ü–æ—Å–∏–ª–∞–Ω–Ω—è ${i + 1}`}
              />
            )}
          />
          <SectionHeader
            title="–§–æ—Ç–æ–ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–æ–∫–∞–∑—ñ–≤ (–¥–æ 10)"
            subtitle="–§–æ—Ç–æ –∞–±–æ —Å–∫—Ä—ñ–Ω–∏ –Ω–∞ —è–∫–∏—Ö –≤–∏–¥–Ω–æ —Å—Ç–∞–≤–ª–µ–Ω–Ω—è –ª—é–¥–∏–Ω–∏ –¥–æ –≤—ñ–π–Ω–∏ –≤ –£–∫—Ä–∞—ó–Ω—ñ"
          />
          <div className="grid grid-cols-2 gap-2">
            <Photo />
            <Photo />
            <Photo />
          </div>
          <Spacer className="h-10" />
          <GradientContainer>
            <div className="flex flex-col px-4 py-5 text-h8">
              <div className="text-h4">–ü—Ä–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è</div>
              <br />
              <p>
                –ü—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ª—é–¥–∏–Ω–∏, –≤–æ–Ω–∞ –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∞ –∞–¥–º—ñ–Ω–æ–º —ñ –¥–æ–¥–∞–Ω–∞ –Ω–∞
                —Å–∞–π—Ç.
              </p>
              <br />
              <p>
                –Ø–∫—â–æ –±–∞–∂–∞—î—Ç–µ{" "}
                <span className="font-bold">–æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è</span>, –∫–æ–ª–∏
                –∞–¥–º—ñ–Ω –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç—å –¥–æ–¥–∞–Ω—É –≤–∞–º–∏ –ª—é–¥–∏–Ω–∏, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ª–∏—à—ñ—Ç—å –≤–∞—à
                email.
              </p>
              <br />
              <Input placeholderLabel="–í–∞—à email (–Ω–µ–æ–±–æ–≤ º—è–∑–∫–æ–≤–æ)" />
            </div>
          </GradientContainer>
          <Spacer className="h-10" />
          <Button onClick={handleSubmit}>–î–æ–¥–∞—Ç–∏</Button>
          <Spacer className="h-10" />
        </div>
      </div>
    </NoSSRWrapper>
  );
};

AddTarget.getLayout = (page) => {
  return <Layout>{page}</Layout>;
};

export default AddTarget;

function SectionHeader(props: {
  title: string | React.ReactNode;
  subtitle?: string | React.ReactNode;
}) {
  return (
    <div className="pt-6 pb-3">
      <h2 className="text-h5">{props.title}</h2>
      {props.subtitle && (
        <>
          <Spacer className="h-1" />
          <p className="text-h8 opacity-50">{props.subtitle}</p>
        </>
      )}
    </div>
  );
}

function InputGroup(props: {
  count: number;
  builder: (i: number) => React.ReactNode;
}) {
  return (
    <div className="flex flex-col gap-2.5">
      {Array.from({ length: props.count }, (_, i) => props.builder(i))}
    </div>
  );
}

function ViewOnWar() {
  // function handleClick(e: React.MouseEvent, value: string) {
  //   e.preventDefault();
  //   console.log(value);
  // }

  return (
    <div className="flex flex-col gap-1">
      <div className="flex gap-1">
        <SelectBox
          label={"–ó–∞ –£–∫—Ä–∞—ó–Ω—É üá∫üá¶"}
          selected={false}
          className="grow py-5"
        />
        <SelectBox
          label={"–ó–∞ —Ä–æ—Å—ñ—é üá∑üá∫"}
          selected={false}
          className="grow py-5"
        />
      </div>
      <SelectBox
        label={"–ó–∞ –º—ñ—Ä –≤–æ –≤—Å—å–æ–º –º—ñ—Ä—î ü§°"}
        selected={false}
        className="py-5"
      />
      <SelectBox label={"–ú–æ–≤—á–∏—Ç—å üò¨"} selected={false} className="py-5" />
    </div>
  );
}
