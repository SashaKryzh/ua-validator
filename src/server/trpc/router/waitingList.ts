import { sendMail, type Message } from '@/server/sendMail';
import { publicProcedure, router } from '../trpc';
import { addToWaitListSchema } from '@/server/schema/wait-list.schema';

export const waitingListRouter = router({
  add: publicProcedure
    .input(addToWaitListSchema)
    .mutation(async ({ ctx, input }) => {
      await ctx.prisma.waitingList.upsert({
        where: { email: input.email },
        update: {
          submitCount: {
            increment: 1,
          },
        },
        create: {
          email: input.email,
        },
      });

      const message: Message = {
        to: input.email,
        subject: '–í—ñ—Ç–∞—î–º–æ! –í–∞—Å –¥–æ–¥–∞–Ω–æ –¥–æ —Å–ø–∏—Å–∫—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è | üá∫üá¶ UA validator',
        text: '–ú–∏ –ø–æ–≤—ñ–¥–æ–º–∏–º–æ –í–∞c, –∫–æ–ª–∏ –±—É–¥–µ –º–æ–∂–ª–∏–≤–æ –¥–æ–¥–∞–≤–∞—Ç–∏ –ª—é–¥–µ–π –¥–æ —Å–ø–∏—Å–∫—É.\n\nüá∫üá¶ UA validator',
      };

      await sendMail(message);
    }),
});
